import React, { useState } from 'react';
import './styles.scss';
import Header from '../../modules/Header/Header';
import Button from '../../components/Button/Button';

const Portfolio = () => {
  const [portfolios, setPortfolios] = useState([
    {
      id: 1,
      name: '–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å',
      description: '–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫, —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥',
      totalValue: 50000,
      currency: 'USD',
      riskLevel: '–ù–∏–∑–∫–∏–π',
      createdAt: '2024-01-15',
      assets: [
        { id: 1, name: '–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–±–ª–∏–≥–∞—Ü–∏–∏', percentage: 40, value: 20000 },
        { id: 2, name: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –æ–±–ª–∏–≥–∞—Ü–∏–∏', percentage: 30, value: 15000 },
        { id: 3, name: '–î–µ–Ω–µ–∂–Ω—ã–µ —Ñ–æ–Ω–¥—ã', percentage: 30, value: 15000 },
      ],
    },
    {
      id: 2,
      name: '–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å',
      description: '–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫, –≤—ã—Å–æ–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞',
      totalValue: 75000,
      currency: 'USD',
      riskLevel: '–í—ã—Å–æ–∫–∏–π',
      createdAt: '2024-02-20',
      assets: [
        { id: 4, name: '–ê–∫—Ü–∏–∏ —Ä–æ—Å—Ç–∞', percentage: 50, value: 37500 },
        { id: 5, name: '–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã', percentage: 30, value: 22500 },
        { id: 6, name: '–ò–Ω–¥–µ–∫—Å–Ω—ã–µ —Ñ–æ–Ω–¥—ã', percentage: 20, value: 15000 },
      ],
    },
  ]);

  const [isModalOpen, setIsModalOpen] = useState(false);
  const [editingPortfolio, setEditingPortfolio] = useState(null);
  const [formData, setFormData] = useState({
    name: '',
    description: '',
    totalValue: '',
    currency: 'USD',
    riskLevel: '–°—Ä–µ–¥–Ω–∏–π',
  });

  const openModal = (portfolio = null) => {
    if (portfolio) {
      setEditingPortfolio(portfolio);
      setFormData({
        name: portfolio.name,
        description: portfolio.description,
        totalValue: portfolio.totalValue.toString(),
        currency: portfolio.currency,
        riskLevel: portfolio.riskLevel,
      });
    } else {
      setEditingPortfolio(null);
      setFormData({
        name: '',
        description: '',
        totalValue: '',
        currency: 'USD',
        riskLevel: '–°—Ä–µ–¥–Ω–∏–π',
      });
    }
    setIsModalOpen(true);
  };

  const closeModal = () => {
    setIsModalOpen(false);
    setEditingPortfolio(null);
    setFormData({
      name: '',
      description: '',
      totalValue: '',
      currency: 'USD',
      riskLevel: '–°—Ä–µ–¥–Ω–∏–π',
    });
  };

  const handleInputChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();

    if (editingPortfolio) {
      // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è
      setPortfolios(portfolios.map((p) => (p.id === editingPortfolio.id ? { ...p, ...formData, totalValue: parseFloat(formData.totalValue) } : p)));
    } else {
      // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è
      const newPortfolio = {
        id: Date.now(),
        ...formData,
        totalValue: parseFloat(formData.totalValue),
        createdAt: new Date().toISOString().split('T')[0],
        assets: [],
      };
      setPortfolios([...portfolios, newPortfolio]);
    }

    closeModal();
  };

  const handleDelete = (id) => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—å?')) {
      setPortfolios(portfolios.filter((p) => p.id !== id));
    }
  };

  const getRiskLevelColor = (riskLevel) => {
    switch (riskLevel) {
      case '–ù–∏–∑–∫–∏–π':
        return 'low-risk';
      case '–°—Ä–µ–¥–Ω–∏–π':
        return 'medium-risk';
      case '–í—ã—Å–æ–∫–∏–π':
        return 'high-risk';
      default:
        return 'medium-risk';
    }
  };

  return (
    <div className='portfolio-page'>
      <Header />

      <div className='portfolio-container'>
        <div className='portfolio-header'>
          <div className='portfolio-header__content'>
            <h1>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è–º–∏</h1>
            <p>–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–º–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è–º–∏</p>
          </div>
          <Button title='–°–æ–∑–¥–∞—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å' className='portfolio-header__button' onClick={() => openModal()} />
        </div>

        <div className='portfolio-stats'>
          <div className='stat-card'>
            <div className='stat-card__number'>{portfolios.length}</div>
            <div className='stat-card__label'>–í—Å–µ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª–µ–π</div>
          </div>
          <div className='stat-card'>
            <div className='stat-card__number'>${portfolios.reduce((sum, p) => sum + p.totalValue, 0).toLocaleString()}</div>
            <div className='stat-card__label'>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</div>
          </div>
          <div className='stat-card'>
            <div className='stat-card__number'>{portfolios.filter((p) => p.riskLevel === '–í—ã—Å–æ–∫–∏–π').length}</div>
            <div className='stat-card__label'>–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫</div>
          </div>
        </div>

        <div className='portfolios-grid'>
          {portfolios.map((portfolio) => (
            <div key={portfolio.id} className='portfolio-card'>
              <div className='portfolio-card__header'>
                <div className='portfolio-card__title-section'>
                  <h3 className='portfolio-card__title'>{portfolio.name}</h3>
                  <span className={`portfolio-card__risk ${getRiskLevelColor(portfolio.riskLevel)}`}>{portfolio.riskLevel}</span>
                </div>
                <div className='portfolio-card__actions'>
                  <Button title='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å' className='portfolio-card__edit-btn' isSecondary onClick={() => openModal(portfolio)} />
                  <Button title='–£–¥–∞–ª–∏—Ç—å' className='portfolio-card__delete-btn' isDanger onClick={() => handleDelete(portfolio.id)} />
                </div>
              </div>

              <p className='portfolio-card__description'>{portfolio.description}</p>

              <div className='portfolio-card__value'>
                <span className='portfolio-card__amount'>${portfolio.totalValue.toLocaleString()}</span>
                <span className='portfolio-card__currency'>{portfolio.currency}</span>
              </div>

              <div className='portfolio-card__assets'>
                <h4>–ê–∫—Ç–∏–≤—ã:</h4>
                {portfolio.assets.length > 0 ? (
                  <div className='assets-list'>
                    {portfolio.assets.map((asset) => (
                      <div key={asset.id} className='asset-item'>
                        <span className='asset-name'>{asset.name}</span>
                        <span className='asset-percentage'>{asset.percentage}%</span>
                        <span className='asset-value'>${asset.value.toLocaleString()}</span>
                      </div>
                    ))}
                  </div>
                ) : (
                  <p className='no-assets'>–ê–∫—Ç–∏–≤—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã</p>
                )}
              </div>

              <div className='portfolio-card__footer'>
                <span className='portfolio-card__date'>–°–æ–∑–¥–∞–Ω: {new Date(portfolio.createdAt).toLocaleDateString()}</span>
              </div>
            </div>
          ))}
        </div>

        {portfolios.length === 0 && (
          <div className='empty-state'>
            <div className='empty-state__icon'>üìä</div>
            <h3>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ—Ä—Ç—Ñ–µ–ª–µ–π</h3>
            <p>–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã</p>
            <Button title='–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å' onClick={() => openModal()} />
          </div>
        )}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
      {isModalOpen && (
        <div className='modal-overlay' onClick={closeModal}>
          <div className='modal' onClick={(e) => e.stopPropagation()}>
            <div className='modal__header'>
              <h2>{editingPortfolio ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å' : '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å'}</h2>
              <button className='modal__close' onClick={closeModal}>
                √ó
              </button>
            </div>

            <form className='modal__form' onSubmit={handleSubmit}>
              <div className='form-group'>
                <label htmlFor='name'>–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è</label>
                <input type='text' id='name' name='name' value={formData.name} onChange={handleInputChange} placeholder='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–µ–ª—è' required />
              </div>

              <div className='form-group'>
                <label htmlFor='description'>–û–ø–∏—Å–∞–Ω–∏–µ</label>
                <textarea
                  id='description'
                  name='description'
                  value={formData.description}
                  onChange={handleInputChange}
                  placeholder='–û–ø–∏—à–∏—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø–æ—Ä—Ç—Ñ–µ–ª—è'
                  rows='3'
                />
              </div>

              <div className='form-row'>
                <div className='form-group'>
                  <label htmlFor='totalValue'>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</label>
                  <input
                    type='number'
                    id='totalValue'
                    name='totalValue'
                    value={formData.totalValue}
                    onChange={handleInputChange}
                    placeholder='0'
                    min='0'
                    step='0.01'
                    required
                  />
                </div>

                <div className='form-group'>
                  <label htmlFor='currency'>–í–∞–ª—é—Ç–∞</label>
                  <select id='currency' name='currency' value={formData.currency} onChange={handleInputChange}>
                    <option value='USD'>USD</option>
                    <option value='EUR'>EUR</option>
                    <option value='RUB'>RUB</option>
                  </select>
                </div>
              </div>

              <div className='form-group'>
                <label htmlFor='riskLevel'>–£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞</label>
                <select id='riskLevel' name='riskLevel' value={formData.riskLevel} onChange={handleInputChange}>
                  <option value='–ù–∏–∑–∫–∏–π'>–ù–∏–∑–∫–∏–π</option>
                  <option value='–°—Ä–µ–¥–Ω–∏–π'>–°—Ä–µ–¥–Ω–∏–π</option>
                  <option value='–í—ã—Å–æ–∫–∏–π'>–í—ã—Å–æ–∫–∏–π</option>
                </select>
              </div>

              <div className='modal__actions'>
                <Button type='button' title='–û—Ç–º–µ–Ω–∞' className='modal__cancel-btn' isSecondary onClick={closeModal} />
                <Button type='submit' title={editingPortfolio ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å' : '–°–æ–∑–¥–∞—Ç—å'} className='modal__submit-btn' />
              </div>
            </form>
          </div>
        </div>
      )}
    </div>
  );
};

export default Portfolio;
